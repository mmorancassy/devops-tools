version: "2.1"

services:
  jenkinscicd:
    image: mmorancassy/jenkins:${JENKINS_VERSION}
    container_name: jenkinscicd
    environment:
      - RESTORE_DEFAULTS=false
      - RESTORE_MAVEN_SETTINGS=false
    volumes:
      - ${DATA_PATH}${JENKINS_DATA}:/var/jenkins_home:rw
      - ${DATA_PATH}${PLATFORM_CONFIG}:/tmp/op:rw  
      - ${DOCKER_DATA}:/var/run/docker.sock
    restart: on-failure     
  gitlab:
    image: gitlab/gitlab-ce:${GITLAB_VERSION}
    container_name: gitlab
    hostname: 'localhost'
    volumes:
      - ${DATA_PATH}${GITLAB_CONFIG}:/etc/gitlab
      - ${DATA_PATH}${GITLAB_LOGS}:/var/log/gitlab
      - ${DATA_PATH}${GITLAB_DATA}:/var/opt/gitlab
      - ${DATA_PATH}${GITLAB_CERTS}:/etc/gitlab/ssl      
    restart: on-failure    
  nexus:
    image: sonatype/nexus3:${NEXUS_VERSION}
    container_name: nexus
    environment:
      - NEXUS_CONTEXT=nexus
    volumes:
      - ${DATA_PATH}${NEXUS_DATA}:/nexus-data     
    restart: on-failure            
  sonarqube:
    image: sonarqube:${SONAR_VERSION}
    command: -Dsonar.web.context=/sonar
    container_name: sonarqube
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
    volumes:
      - ${DATA_PATH}${SONAR_CONF}:/opt/sonarqube/conf
      - ${DATA_PATH}${SONAR_DATA}:/opt/sonarqube/data
      - ${DATA_PATH}${SONAR_EXT}:/opt/sonarqube/extensions
      - ${DATA_PATH}${SONAR_PLUGINS}:/opt/sonarqube/lib/bundled-plugins
    depends_on:
      - "db"      
    restart: on-failure   
  db:
    image: postgres:${POSTGRESQL_VERSION}
    container_name: db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - ${DATA_PATH}${SONAR_POSTGRESQL}:/var/lib/postgresql
      - ${DATA_PATH}${SONAR_POSTGRESQL_DATA}:/var/lib/postgresql/data       
    restart: on-failure 
  reverseproxy:
    image: nginx:${NGINX_VERSION}
    container_name: reverseproxy
    ports:
      - "443:443"      
    volumes:  
      - ${NGINX_CONF}:/etc/nginx/nginx.conf:rw
      - ${NGINX_CERTS}:/etc/nginx/ssl:ro
    restart: on-failure     
  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATA_PATH}${PORTAINER_DATA}:/data
    restart: on-failure